@inherits LayoutComponentBase

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<div class="page">
    <main>
        <MudLayout>
            <MudMainContent Class="pt-16 px-16">

                <MudGrid>
                    <MudItem lg="12">
                        <MudGrid Spacing="4" Justify="Justify.Center">
                            <MudItem lg="12" Style="background-color:lightpink">
                                <MudText Typo="Typo.h6">ClariSオフ向け ランダム選曲システム</MudText>
                            </MudItem>

                            <MudItem lg="12">
                                <MudForm>
                                    <MudRadioGroup @bind-Value="SelectedModel">
                                        <MudGrid Spacing="3" Justify="Justify.Center">
                                            <MudItem lg="1" />
                                            <MudItem lg="3">
                                                <MudRadio Value="3" Size="Size.Small">全機種(未実装)</MudRadio>
                                            </MudItem>
                                            <MudItem lg="3">
                                                <MudRadio Value="1" Size="Size.Small">JOYSOUND</MudRadio>
                                            </MudItem>
                                            <MudItem lg="3">
                                                <MudRadio Value="2" Size="Size.Small">DAM</MudRadio>
                                            </MudItem>
                                            <MudItem lg="2" />
                                            <MudItem lg="6">
                                                <MudCheckBox @bind-Value="PrintTitle" FullWidth="true">曲名を表示する</MudCheckBox>
                                            </MudItem>
                                            <MudItem lg="6">
                                                <MudButton OnClick="OnClickSelectSong" Variant="Variant.Filled" FullWidth="true">選曲</MudButton>
                                            </MudItem>
                                        </MudGrid>
                                    </MudRadioGroup>
                                </MudForm>
                            </MudItem>
                        </MudGrid>
                    </MudItem>
                </MudGrid>

                <MudSimpleTable>
                    <thead>
                        <tr>
                            @foreach( var h in headings )
                            {
                                <th>@h</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach( var row in list )
                        {
                            <tr>
                                <td>@row.Item2</td>
                                @if ( PrintTitle == true ) { <td>@row.Item1.Title</td> }
                                else { <td>**************</td> }
                                <td>@row.Item1.Number[SelectedModel]</td>
                            </tr>
                        }
                    </tbody>
                </MudSimpleTable>
            </MudMainContent>
        </MudLayout>
    </main>
</div>

@code {
    private int SelectedModel = 1;
    private bool PrintTitle { get; set; } = true;

    ClariSKaraoke.Shared.Models.SongDataManager manager = new ClariSKaraoke.Shared.Models.SongDataManager();
    List<Tuple<ClariSKaraoke.Shared.Models.SongData, int>> list = new List<Tuple<ClariSKaraoke.Shared.Models.SongData, int>>();
    private int counter = 0;

    string[] headings = { "曲数", "タイトル", "選曲番号" };

    private void OnClickSelectSong()
    {
        ++counter;
        list.Add( new ( manager.GetSongDataRandom(SelectedModel), counter ) );
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        manager.ResetIndex();
        counter = 0;
    }
}